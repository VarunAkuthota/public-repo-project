name: Java CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
      MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run tests
        run: mvn $MAVEN_CLI_OPTS test

  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build package
        run: mvn $MAVEN_CLI_OPTS package
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Login to Amazon ECR
        env:
          AWS_REGION: your-region
        run: $(aws ecr get-login --no-include-email --region $AWS_REGION)
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_URL: your-ecr-url
          IMAGE_NAME: your-image-name
        run: |
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME:latest $ECR_URL/$IMAGE_NAME:latest
